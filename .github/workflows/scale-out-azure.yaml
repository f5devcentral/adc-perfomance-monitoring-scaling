name: scale-out-azure
on:
  repository_dispatch:
    types: 
      - scale-out-azure

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: output webhook source
      run: echo "The source of the webhook is = ${{ github.event.client_payload.webhookSource }}"
    
 

    - name: parse client payload data for scaling
      id: client_payload_data
      run: |
        echo ::set-output name=asg_name::${{ github.event.client_payload.scaleName }}
        echo ::set-output name=resource_group::${{ github.event.client_payload.rgGrpRgn }}
      
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: query Azure
      id: scale_params
      run: |
        az vmss show --name ${{ steps.client_payload_data.outputs.asg_name }} --resource-group ${{ steps.client_payload_data.outputs.resource_group }} --verbose
        echo ::set-output name=current_size::$(az vmss show --name ${{ steps.client_payload_data.outputs.asg_name }} --resource-group ${{ steps.client_payload_data.outputs.resource_group }} | jq '.sku.capacity')
        az monitor autoscale show -g ${{ steps.client_payload_data.outputs.resource_group }} -n ${{ steps.client_payload_data.outputs.asg_name }} | jq .
        echo ::set-output name=min_size::$(az monitor autoscale show -g ${{ steps.client_payload_data.outputs.resource_group }} -n ${{ steps.client_payload_data.outputs.asg_name }} |  jq '.profiles[] .capacity.minimum')
        echo ::set-output name=max_size::$(az monitor autoscale show -g ${{ steps.client_payload_data.outputs.resource_group }} -n ${{ steps.client_payload_data.outputs.asg_name }} |  jq '.profiles[] .capacity.maximum')
        echo ::set-output name=default_size::$(az monitor autoscale show -g ${{ steps.client_payload_data.outputs.resource_group }} -n ${{ steps.client_payload_data.outputs.asg_name }} |  jq '.profiles[] .capacity.default')
   
    - name: read autoscale output
      run: |
        echo "current_size = ${{ steps.scale_params.outputs.current_size }}"
        echo "min_size = ${{ steps.scale_params.outputs.min_size }}"
        echo "max_size = ${{ steps.scale_params.outputs.max_size }}"
        echo "default_size = ${{ steps.scale_params.outputs.default_size }}"

    - name: check if can be scaled
      id: check
      run: |
        echo ::set-output name=wanted_capacity::$(expr ${{ steps.scale_params.outputs.current_size }} + 1)
        echo ::set-output name=difference::$(expr ${{ steps.scale_params.outputs.max_size }} - ${{ steps.scale_params.outputs.current_size }})

    - name: output difference
      run: echo "The difference between desired and capacity = ${{ steps.check.outputs.difference }}"
 
    - name: scale up if not at max
      id: check_scale
      if: steps.check.outputs.difference > 0 
      run: |
       echo "The difference between desired and capacity = ${{ steps.check.outputs.difference }}"
       echo ::set-output name=new_size::$( expr ${{ steps.scale_params.outputs.current_size }} + 1)
       echo ::set-output name=can_scale::'true'

    - name: scale up
      if: steps.check_scale.outputs.can_scale == 'true'
      run: |
        az vmss scale --name ${{ steps.client_payload_data.outputs.asg_name }} --new-capacity ${{ steps.check_scale.outputs.new_size }} --resource-group ${{ steps.client_payload_data.outputs.resource_group }}
        
    - name: can't scale
      if: ${{ steps.check_scale.outputs.can_scale != 'true' }}
      run: echo "Sorry, can't scale out because the new desired capacity of ${{ steps.check.outputs.wanted_capacity }} is greater than the maximum size of ${{ steps.scale_params.outputs.max_size }}"