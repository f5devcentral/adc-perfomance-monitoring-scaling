#!/bin/bash

# Send output to log file and serial console
mkdir -p  /var/log/cloud /config/cloud /var/config/rest/downloads
LOG_FILE=/var/log/cloud/startup-script.log
[[ ! -f $LOG_FILE ]] && touch $LOG_FILE || { echo "Run Only Once. Exiting"; exit; }
npipe=/tmp/$$.tmp
trap "rm -f $npipe" EXIT
mknod $npipe p
tee <$npipe -a $LOG_FILE /dev/ttyS0 &
exec 1>&-
exec 1>$npipe
exec 2>&1

# # create user
tmsh create auth user ${bigip_username} password ${bigip_password} shell tmsh partition-access replace-all-with { all-partitions { role admin } }

# save config
tmsh save sys config

mkdir -p /config/cloud

cat << 'EOF' > /config/cloud/runtime-init-conf.yaml
---
runtime_parameters:
  - name: USER_NAME
    type: static
    value: ${bigip_username}
  - name: SSH_KEYS
    type: static
    value: "${ssh_keypair}"
EOF

if ${aws_secretmanager_auth}
then
   cat << 'EOF' >> /config/cloud/runtime-init-conf.yaml
  - name: ADMIN_PASS
    type: secret
    secretProvider:
      environment: aws
      type: SecretsManager
      version: AWSCURRENT
      secretId: ${bigip_password}
EOF
else
   cat << 'EOF' >> /config/cloud/runtime-init-conf.yaml
  - name: ADMIN_PASS
    type: static
    value: ${bigip_password}
EOF
fi

# Add remaining runtime_parameters:
cat << 'EOF' >> /config/cloud/runtime-init-conf.yaml
pre_onboard_enabled:
  - name: provision_rest
    type: inline
    commands:
      - /usr/bin/setdb provision.extramb 500
      - /usr/bin/setdb restjavad.useextramb true
extension_packages:
  install_operations:
    - extensionType: do
      extensionVersion: ${DO_VER}
      extensionUrl: ${DO_URL}
    - extensionType: as3
      extensionVersion: ${AS3_VER}
      extensionUrl: ${AS3_URL}
    - extensionType: ts
      extensionVersion: ${TS_VER}
      extensionUrl: ${TS_URL}
    - extensionType: cf
      extensionVersion: ${CFE_VER}
      extensionUrl: ${CFE_URL}
extension_services:
  service_operations:
    - extensionType: do
      type: inline
      value: 
        schemaVersion: 1.0.0
        class: Device
        async: true
        label: Onboard BIG-IP
        Common:
          class: Tenant
          hostname: ${hostname}
          dbVars:
            class: DbVariables
            ui.advisory.enabled: true
            ui.advisory.color: green
            ui.advisory.text: /Common/hostname
            config.allow.rfc3927: enable
          myDns:
            class: DNS
            nameServers:
            - 8.8.8.8
            - 4.2.2.4
            search:
            - f5.com
          myNtp:
            class: NTP
            servers:
            - 0.pool.ntp.org
            - 1.pool.ntp.org
            - 2.pool.ntp.org
            timezone: ${timezone}
          myProvisioning:
            class: Provision
            ltm: nominal
            avr: nominal
            asm: nominal
    - extensionType: ts
      type: inline
      value: 
        class: Telemetry
        My_System:
          class: Telemetry_System
          systemPoller:
            interval: 60
        My_Listener:
          class: Telemetry_Listener
          port: 6514  
        My_Consumer:
          class: Telemetry_Consumer
          type: Splunk
          host: ${param_1}
          protocol: https
          port: 8088
          allowSelfSignedCert: true
          passphrase:
            cipherText: ${param_2}  
    - extensionType: as3
      type: inline
      value:
        $schema: https://raw.githubusercontent.com/F5Networks/f5-appsvcs-extension/master/schema/latest/as3-schema.json
        class: AS3
        action: deploy
        persist: true
        declaration:
          class: ADC
          schemaVersion: 3.13.0
          id: 123abc
          label: Sample 1
          remark: An HTTPS sample application
          controls:
            trace: true
          DemoTenant:
            class: Tenant
            Shared:
              class: Application
              template: shared
            ${app_name}:
              class: Application
              template: https
              serviceMain:
                class: Service_HTTPS
                virtualPort: 443
                virtualAddresses:
                - 0.0.0.0
                pool: ${web_pool}
                policyWAF:
                  use: My_ASM_Policy
                serverTLS: webtls
                profileTrafficLog:
                  use: telemetry_traffic_log_profile
                profileAnalyticsTcp:
                  use: telemetry_tcp_analytics_profile
                securityLogProfiles:
                - use: telemetry_asm_security_log_profile
                profileBotDefense:
                  bigip: /Common/bot-defense
                profileDOS:
                  bigip: /Common/dos
              My_ASM_Policy:
                class: WAF_Policy
                url: https://raw.githubusercontent.com/f5devcentral/adc-telemetry-based-autoscaling/main/configs/app_sec_policy.xml
                ignoreChanges: true
              ${web_pool}:
                class: Pool
                monitors:
                - tcp
                members:
                - servicePort: 80
                  addressDiscovery: consul
                  updateInterval: 10
                  uri: http://${consul_ip}:8500/v1/catalog/service/nginx
              telemetry_local_rule:
                remark: Only required when TS is a local listener
                class: iRule
                iRule: |-
                  when CLIENT_ACCEPTED {
                  node 127.0.0.1 6514
                  }
              telemetry_local:
                remark: Only required when TS is a local listener
                class: Service_TCP
                virtualAddresses:
                - 255.255.255.254
                virtualPort: 6514
                iRules:
                - telemetry_local_rule
              telemetry:
                class: Pool
                members:
                - enable: true
                  serverAddresses:
                  - 255.255.255.254
                  servicePort: 6514
                monitors:
                - bigip: /Common/tcp
              telemetry_hsl:
                class: Log_Destination
                type: remote-high-speed-log
                protocol: tcp
                pool:
                  use: telemetry
              telemetry_formatted:
                class: Log_Destination
                type: splunk
                forwardTo:
                  use: telemetry_hsl
              telemetry_publisher:
                class: Log_Publisher
                destinations:
                - use: telemetry_formatted
              telemetry_asm_security_log_profile:
                class: Security_Log_Profile
                application:
                  localStorage: false
                  remoteStorage: splunk
                  servers:
                  - address: 255.255.255.254
                    port: '6514'
                  storageFilter:
                    requestType: all
              telemetry_traffic_log_profile:
                class: Traffic_Log_Profile
                requestSettings:
                  requestEnabled: true
                  requestProtocol: mds-tcp
                  requestPool:
                    use: telemetry
                  requestTemplate: event_source='request_logging',hostname='$BIGIP_HOSTNAME',client_ip='$CLIENT_IP',server_ip='$SERVER_IP',http_method='$HTTP_METHOD',http_uri='$HTTP_URI',virtual_name='$VIRTUAL_NAME',event_timestamp='$DATE_HTTP'
              telemetry_http_analytics_profile:
                class: Analytics_Profile
                collectGeo: true
                collectMaxTpsAndThroughput: true
                collectOsAndBrowser: true
                collectIp: true
                collectMethod: true
                collectPageLoadTime: true
                collectResponseCode: true
                collectSubnet: true
                collectUrl: true
                collectUserAgent: true
                collectUserSession: true
                publishIruleStatistics: true
              telemetry_tcp_analytics_profile:
                class: Analytics_TCP_Profile
                collectCity: true
                collectContinent: true
                collectCountry: true
                collectNexthop: true
                collectPostCode: true
                collectRegion: true
                collectRemoteHostIp: true
                collectRemoteHostSubnet: true
                collectedByServerSide: true
              webtls:
                class: TLS_Server
                certificates:
                - certificate: webcert
              webcert:
                class: Certificate
                remark: in practice we recommend using a passphrase
                certificate: |-
                  -----BEGIN CERTIFICATE-----
                  MIIFWjCCBEKgAwIBAgITfQAAAB0gY6x6LLG8KwAAAAAAHTANBgkqhkiG9w0BAQUF
                  ADBOMRMwEQYKCZImiZPyLGQBGRYDY29tMRowGAYKCZImiZPyLGQBGRYKYXNlcnJh
                  Y29ycDEbMBkGA1UEAxMSYXNlcnJhY29ycC1EQy1DQS0xMB4XDTIwMDIxNTIyMTIw
                  MloXDTIyMDIxNDIyMTIwMlowHzEdMBsGA1UEAxMUbXlhcHAuYXNlcnJhY29ycC5j
                  b20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDTGBNbVYLJiIDfL0FQ
                  Mi/mFzcLeQhP11c4YdxjMBPJKSBWKnXuxywcOJHJ6A2rpGKhAApSsVc6j6sXfCty
                  bszbNgvx7KdV8c2S02ILNqlJwTOXRkQhN0srlATYdF/i6T1Y1fpkjBiZMC7A8fRf
                  QNwT8DgberiuN4YvfsNGbQej+a1dOVQAGaBn15xwXe8Xfw9iLRangb8n4yAz4qS2
                  IJig2UYzSc3P6k1ulZ6I1Yo/xOj7zar3R/09DZ6ikGBvy3TrSfYpRX8pXFgFsJOl
                  DeYwzAKlKY4MnapgwszIFMmxveK/d3K+l3Kn0791VdBklrrlycV7itGXrqNYdHLg
                  C3dPAgMBAAGjggJeMIICWjA7BgkrBgEEAYI3FQcELjAsBiQrBgEEAYI3FQiBg9Bp
                  g5vnB4b5lxighjeD8YE0eYL+ujyChWkCAWQCAQMwEwYDVR0lBAwwCgYIKwYBBQUH
                  AwEwDgYDVR0PAQH/BAQDAgWgMBsGCSsGAQQBgjcVCgQOMAwwCgYIKwYBBQUHAwEw
                  HQYDVR0OBBYEFMXq6/mUs8bg5TUoL3uXPUyyAFyXMB8GA1UdIwQYMBaAFBEzMhC4
                  l6myjmO0WBY2s0tLj1fQMIHOBgNVHR8EgcYwgcMwgcCggb2ggbqGgbdsZGFwOi8v
                  L0NOPWFzZXJyYWNvcnAtREMtQ0EtMSxDTj1kYyxDTj1DRFAsQ049UHVibGljJTIw
                  S2V5JTIwU2VydmljZXMsQ049U2VydmljZXMsQ049Q29uZmlndXJhdGlvbixEQz1h
                  c2VycmFjb3JwLERDPWNvbT9jZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0P2Jhc2U/
                  b2JqZWN0Q2xhc3M9Y1JMRGlzdHJpYnV0aW9uUG9pbnQwgccGCCsGAQUFBwEBBIG6
                  MIG3MIG0BggrBgEFBQcwAoaBp2xkYXA6Ly8vQ049YXNlcnJhY29ycC1EQy1DQS0x
                  LENOPUFJQSxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1TZXJ2aWNlcyxD
                  Tj1Db25maWd1cmF0aW9uLERDPWFzZXJyYWNvcnAsREM9Y29tP2NBQ2VydGlmaWNh
                  dGU/YmFzZT9vYmplY3RDbGFzcz1jZXJ0aWZpY2F0aW9uQXV0aG9yaXR5MA0GCSqG
                  SIb3DQEBBQUAA4IBAQC8xoaBDhn0BGqQ73ROjlvI+5yJs3UUws2D7KCtpzNt2Ksm
                  gm52umZoIzofPRXg/RVkt+Ig7Y9+ixaEyAxMFtpDyap1bTNjWsw99LoUZvMo7B9q
                  rgOS55h5OeLwc1PM3n43I9H2C3uQ1hYflD3ovzvzrywejCHlHlReovZkYCcrDCa+
                  ytw7Hob0P1vkXsPtpmk61A7PCLw6DghhczT1f4nAK147FuRl55jz38JFOtqKVlfU
                  NH4EaSxciHO2evWDHUddzeAwxHLg77UKPH+MSPXd7jGZx3xqQEtpjMqq5WM09YsL
                  1mwOJpk1Xarkb0WB0J10YXqKs6tSxyrfX/FL5MZA
                  -----END CERTIFICATE-----
                privateKey: |-
                  -----BEGIN PRIVATE KEY-----
                  MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDTGBNbVYLJiIDf
                  L0FQMi/mFzcLeQhP11c4YdxjMBPJKSBWKnXuxywcOJHJ6A2rpGKhAApSsVc6j6sX
                  fCtybszbNgvx7KdV8c2S02ILNqlJwTOXRkQhN0srlATYdF/i6T1Y1fpkjBiZMC7A
                  8fRfQNwT8DgberiuN4YvfsNGbQej+a1dOVQAGaBn15xwXe8Xfw9iLRangb8n4yAz
                  4qS2IJig2UYzSc3P6k1ulZ6I1Yo/xOj7zar3R/09DZ6ikGBvy3TrSfYpRX8pXFgF
                  sJOlDeYwzAKlKY4MnapgwszIFMmxveK/d3K+l3Kn0791VdBklrrlycV7itGXrqNY
                  dHLgC3dPAgMBAAECggEADudNPo6L/FSR3LAGaXYRoaoT7dBuwMxQUR+/opUbYIFx
                  0gOPbftL5vYrfNjQVkT13a4WDH6OzQilqLPQkXS3K+bl8v+lVNEMlYgtDOOgEh/8
                  13pThxDTUtFRgkK9HlUfSq1Yz06A0hfvxRmQCkWXBCVaoL4KWep7o9DMUqWR+4ad
                  XlvzvG2W3fvNE3+ewwf0tR/OYTQOZvkRfm0Ws1s0W85wr6Ec87psbLPPO2yecFcq
                  3fJjcZmbaWWG5Thh9479W3rhC3I6rJN+YLgyXoumml5wmmjf8CxocUL3uPt+32u5
                  E4OZTLdAIF0+KxH3hYbw3D6DB/LnAZVB+jxmOC4j2QKBgQDm5JVzld5KYUlIt566
                  syQ95JMyw0Oqp1U7WMwI8+RMYnO4NPo6Dzej9LMsVAQFmg5DncElSf3PLC9PfsVe
                  CK6FiXPScy/9cAqchJVI3f7CgJiYvrFwoiieVJFYSgh52aWxL/KHnEe4UWk50qmS
                  /hCyPdSCHJVw1oh5dIO/QGG+YwKBgQDqDFi8mNrUI/QD+m/2HNT+6PaXUWEfyY94
                  /swvn9O+qQYWbU8MCxeucthTJ5p5lYY5FdUeKPGZn0jahgoEV63XnuemNe43tOJA
                  Dpo1UyWmQoodAOOm9QiEEjOAxx+hEcSfJrEUgGSYVR+GHbap+xuB0BrtCN9qWsdb
                  U2d25b4xJQKBgQCV4SAardhkVA6sQ3WoIA2Ql8Xtl89fAcxT/+pCjX9PDkGr+8fK
                  1IH7ziZYyhjqQfysa8UrHYLCbx4u7k3UIrKXQIiMvfUTAR4CSBZX/LMZMzzbOj4Y
                  rUrMrHzE4Rnrbxsdj9BRs2LjBQXXYSZuornX2kcORtvDKZ/hp362MWbBnQKBgQCo
                  SZZojXQTQ4LKdYGZsmOIotPkO9SdOZ3a/0KsH7zuA7Tn3VMQMs2lVtiq+ff94oCv
                  fT5PQFtv/XMyBV0ggDb0qkKgZXjTP1HLg3RoUU/p+0A52JDYVKn55Oh5eTQJ6a+6
                  S+TZ+/PZAKP5GFZmZLMDpTInK9ERNRLRXOgxOsKFrQKBgQDH6PfQTuvubwL+CYbb
                  CI1AtWOGEGcuLIbtlbh5e4/1FxtdG2pgV2wBJxIwNhn8U7yMHj9B/MB39OAt6Vlc
                  ZU0Dah41RMi4dPGAi/iuTQklfRLjROSVmhb/lS9xDRxzHcm0u0YBuU0Q+MC3aw7O
                  jXWs11QDs5AR93mLB0AZdRjGLA==
                  -----END PRIVATE KEY-----
post_onboard_enabled: []
EOF

# # Download
#PACKAGE_URL='https://cdn.f5.com/product/cloudsolutions/f5-bigip-runtime-init/v1.1.0/dist/f5-bigip-runtime-init-1.1.0-1.gz.run'
#PACKAGE_URL='https://cdn.f5.com/product/cloudsolutions/f5-bigip-runtime-init/v1.2.0/dist/f5-bigip-runtime-init-1.2.0-1.gz.run'
for i in {1..30}; do
    curl -fv --retry 1 --connect-timeout 5 -L ${INIT_URL} -o "/var/config/rest/downloads/f5-bigip-runtime-init.gz.run" && break || sleep 10
done
# Install
bash /var/config/rest/downloads/f5-bigip-runtime-init.gz.run -- '--cloud aws'
# Run
# export F5_BIGIP_RUNTIME_INIT_LOG_LEVEL=silly
f5-bigip-runtime-init --config-file /config/cloud/runtime-init-conf.yaml
